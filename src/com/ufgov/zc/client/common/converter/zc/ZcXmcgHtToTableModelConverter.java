/**   * @(#) project: zc_xa* @(#) file: ZcXmcgHtToTableModelConverter.java* * Copyright 2010 UFGOV, Inc. All rights reserved.* UFGOV PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.* */package com.ufgov.zc.client.common.converter.zc;import static com.ufgov.zc.common.system.constants.ZcElementConstants.FIELD_TRANS_ORIGIN_CODE;import java.math.BigDecimal;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.Vector;import javax.swing.JTable;import javax.swing.table.DefaultTableModel;import javax.swing.table.TableModel;import com.ufgov.zc.client.common.LangTransMeta;import com.ufgov.zc.client.common.MyTableModel;import com.ufgov.zc.client.component.table.BeanTableModel;import com.ufgov.zc.client.component.table.ColumnBeanPropertyPair;import com.ufgov.zc.client.component.table.celleditor.MoneyCellEditor;import com.ufgov.zc.client.component.table.celleditor.TextCellEditor;import com.ufgov.zc.client.component.table.celleditor.zc.ZcBCatalogueCellEditor;import com.ufgov.zc.client.component.table.cellrenderer.NumberCellRenderer;import com.ufgov.zc.client.component.table.codecelleditor.AsValComboBoxCellEditor;import com.ufgov.zc.client.component.table.codecellrenderer.AsValCellRenderer;import com.ufgov.zc.client.datacache.AsValDataCache;import com.ufgov.zc.client.datacache.CompanyDataCache;import com.ufgov.zc.client.util.SwingUtil;import com.ufgov.zc.client.zc.ZcUtil;import com.ufgov.zc.common.commonbiz.model.BaseElement;import com.ufgov.zc.common.system.Guid;import com.ufgov.zc.common.system.constants.ZcElementConstants;import com.ufgov.zc.common.system.model.AsFile;import com.ufgov.zc.common.system.util.BeanUtil;import com.ufgov.zc.common.zc.model.TreeNodeValueObject;import com.ufgov.zc.common.zc.model.ZcTBchtItem;import com.ufgov.zc.common.zc.model.ZcXmcgHt;import com.ufgov.zc.common.zc.model.ZcXmcgHtBi;public class ZcXmcgHtToTableModelConverter {  public static DefaultTableModel convertToTableModel(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));    names.add("中标供应商");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_CODE));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_NUM));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_STATUS));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcXmcgHt zcXmcgHt = (ZcXmcgHt) entrustList.get(i);        rowData.add(CompanyDataCache.getName(zcXmcgHt.getCoCode()));        rowData.add(zcXmcgHt.getZcSuName());        rowData.add(zcXmcgHt.getZcPProMake().getZcMakeName());        rowData.add(zcXmcgHt.getZcPProMake().getZcMakeCode());        rowData.add(zcXmcgHt.getZcHtName());        rowData.add(zcXmcgHt.getZcHtCode());        rowData.add(zcXmcgHt.getZcHtNum());        rowData.add(AsValDataCache.getName("ZC_VS_HT_STATUS", zcXmcgHt.getZcHtStatus()));        //        //        rowData.add(zcXmcgHt.getNd());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  private static List<ColumnBeanPropertyPair> itemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_SP_NAME, "zcSpName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_SP_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));//    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BRA_NAME, "zcBraName", LangTransMeta//    .translate(ZcElementConstants.FIELD_TRANS_ZC_BRA_NAME)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_SPEC, "zcMerSpec", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_SPEC)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL, "zcCaigShl", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_JLDW, "zcCaigJldw", "计量单位"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE, "zcCaigPrice", "单价"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_MONEY, "zcCaigMoney", "金额"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ITEM_SUM, "zcItemSum", "预算总计"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BUDGET_BI_MONEY, "budgetBiMoney", "财政性资金"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BUDGET_OTHER_MONEY, "budgetOtherMoney", "其他资金"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_VAL, "zcItemVal", "实际总计"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_BI_MONEY, "zcHtBiMoney", "财政性资金"));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_OTHER_MONEY, "zcHtOtherMoney", "其他资金"));    //    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, "zcHtGkMoney", LangTransMeta    //    //    .translate(ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS, "zcIsJnjs", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX, "zcMerIsZzcx", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX)));    itemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB, "zcMerIsLshb", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB)));  }  private static Map<String, Integer> ItemColNotEditable = new HashMap<String, Integer>();  private static Map<String, Boolean> BiColNotEditable = new HashMap<String, Boolean>();  static {    BiColNotEditable.put(ZcElementConstants.FIELD_TRANS_FUND_CODE, false);    BiColNotEditable.put(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, false);    BiColNotEditable.put(ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE, false);    BiColNotEditable.put(ZcElementConstants.FIELD_TRANS_ZC_BI_DO_SUM, false);    BiColNotEditable.put(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, true);  }  public static TableModel convertSubItemTableData(List itemList,final boolean IsCar) {    BeanTableModel<ZcTBchtItem> tm = new BeanTableModel<ZcTBchtItem>() {      private static final long serialVersionUID = 6888363838628062064L;      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (ZcUtil.isGys() || ZcUtil.isCreateHtByCgzx()) {          if ("ZC_ITEM_VAL".equals(columnId)             || "ZC_ITEM_SUM".equals(columnId)            || "ZC_CAIG_MONEY".equals(columnId)) {            return false;          }        } else if (ZcUtil.isYsdw()) {          if (ZcElementConstants.FIELD_TRANS_BUDGET_BI_MONEY.equals(columnId) || ZcElementConstants.FIELD_TRANS_BUDGET_OTHER_MONEY.equals(columnId)            || ZcElementConstants.FIELD_TRANS_ZC_HT_BI_MONEY.equals(columnId) || ZcElementConstants.FIELD_TRANS_ZC_HT_OTHER_MONEY.equals(columnId)) {            return true;          }else if(IsCar &&(ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(columnId) || ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS.equals(columnId) || ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB.equals(columnId) )){            return true;          }else{            return false;          }        }        return super.isCellEditable(row, column);      }      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcTBchtItem bean = dataBeanList.get(rowIndex);        String currentColName = this.getColumnIdentifier(columnIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE.equals(currentColName)        || ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE.equals(currentColName)) {            bean.setZcCaigPrice(new BigDecimal(aValue.toString()));          }          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {            bean.setZcCaigShl(new BigDecimal(aValue.toString()));          }          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {          }          BigDecimal sl = bean.getZcCaigShl() == null ? BigDecimal.ZERO : bean.getZcCaigShl();          BigDecimal price = bean.getZcCaigPrice() == null ? BigDecimal.ZERO : bean.getZcCaigPrice();          bean.setZcCaigMoney(sl.multiply(price));          putEditedData(bean);          fireTableCellUpdated(rowIndex, columnIndex);          //super.setValueAt(aValue, rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (Object o : itemList) {      ((ZcTBchtItem) o).setTempId(Guid.genID());    }    tm.setDataBean(itemList, itemInfo);    return tm;  }  public static List<ColumnBeanPropertyPair> getItemInfo() {    return itemInfo;  }  public static void setItemInfo(List<ColumnBeanPropertyPair> itemInfo) {    ZcXmcgHtToTableModelConverter.itemInfo = itemInfo;  }  private static List<ColumnBeanPropertyPair> biInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcPProMitemBi.zcBiNo", "指标编号"));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME, "zcPProMitemBi.originName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME)));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "zcPProMitemBi.senddocName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_NAME, "zcPProMitemBi.fundName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_FUND_NAME)));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "zcPProMitemBi.projectName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "zcPProMitemBi.bAccName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "zcPProMitemBi.outlayName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));          biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, "zcPProMitemBi.zcBiJhuaSum", "采购计划金额"));        biInfo.add(new ColumnBeanPropertyPair("zcCanUseSum", "zcCanUseSum", "合同可用金额"));    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, "zcBiBcsySum", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM)));//    biInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_YJJS_SUM, "zcBiYjjsSum", LangTransMeta//    .translate(ZcElementConstants.FIELD_TRANS_ZC_BI_YJJS_SUM)));  }  private static List<ColumnBeanPropertyPair> biInfo2 = new ArrayList<ColumnBeanPropertyPair>();  static {    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcBiNo", "指标编号"));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME, "originName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_NAME, "fundName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_FUND_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "projectName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "bAccName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "outlayName", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));       biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, "zcPProMitemBi.zcBiJhuaSum", "采购计划金额"));        biInfo2.add(new ColumnBeanPropertyPair("zcCanUseSum", "zcCanUseSum", "合同可用金额"));    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, "zcBiBcsySum", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM)));//    biInfo2.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_YJJS_SUM, "zcBiYjjsSum", LangTransMeta//    .translate(ZcElementConstants.FIELD_TRANS_ZC_BI_YJJS_SUM)));  }  public static TableModel convertSubBiTableData(List<ZcXmcgHtBi> biList, final boolean canEdit) {    BeanTableModel<ZcXmcgHtBi> tm = new BeanTableModel<ZcXmcgHtBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (canEdit) {          ZcXmcgHtBi bi = this.getBean(row);          if (bi != null && bi.getZcBiYjjsSum() != null && bi.getZcBiYjjsSum().intValue() > 0) {            if ("ZC_FUND_CODE".equals(columnId)) {              return false;            }          }          return super.isCellEditable(row, column);        } else {          if (ZcElementConstants.FIELD_TRANS_ZC_BI_NO.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_ORIGIN_NAME.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_SENDDOC_NAME.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_FUND_NAME.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_PROJ_NAME.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_B_ACC_NAME.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_ZC_BI_YJJS_SUM.equals(columnId)            ||ZcElementConstants.FIELD_TRANS_OUTLAY_NAME.equals(columnId)            ||"zcCanUseSum".equals(columnId)) {            return false;          }        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");//System.out.println("size="+biList.size());    for (ZcXmcgHtBi o : biList) {      if(o.getTempId()==null){        o.setTempId(Guid.genID());      }    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfo);    return tm;  }  public static void setBiTableEditor(JTable table) {    table.setDefaultEditor(String.class, new TextCellEditor());    SwingUtil.setTableCellEditor(table, "ZC_BI_SUM", new MoneyCellEditor(false));    SwingUtil.setTableCellRenderer(table, "ZC_BI_SUM", new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, "zcCanUseSum", new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, "zcCanUseSum", new NumberCellRenderer());    //发文文号    SwingUtil.setTableCellEditor(table, FIELD_TRANS_ORIGIN_CODE, new AsValComboBoxCellEditor("ZC_VS_ORIGIN_NAME"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, new AsValCellRenderer("ZC_VS_ORIGIN_NAME"));    //资金性质    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_FUND_CODE, new AsValComboBoxCellEditor("ZC_VS_FUND_NAME"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_FUND_CODE, new AsValCellRenderer("ZC_VS_FUND_NAME"));    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE, new AsValComboBoxCellEditor("ZC_VS_PAYTYPE_NAME"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_PAYTYPE_CODE, new AsValCellRenderer("ZC_VS_PAYTYPE_NAME"));    //指标来源    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, new AsValComboBoxCellEditor("ZC_VS_ORIGIN_NAME"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, new AsValCellRenderer("ZC_VS_ORIGIN_NAME"));    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_BI_JHUA_SUM, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, new NumberCellRenderer());  }  public static void setItemTableEditor(JTable table) {    //是否节能节水    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS, new AsValComboBoxCellEditor("VS_Y/N"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS, new AsValCellRenderer("VS_Y/N"));    //是否自主创新    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX, new AsValComboBoxCellEditor("VS_Y/N"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX, new AsValCellRenderer("VS_Y/N"));    //是否绿色创新    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB, new AsValComboBoxCellEditor("VS_Y/N"));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB, new AsValCellRenderer("VS_Y/N"));    //品目代码    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, new ZcBCatalogueCellEditor());    //    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, new MoneyCellEditor());    //    //    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL, new MoneyCellEditor(false));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_JLDW, new TextCellEditor());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE, new MoneyCellEditor(false));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_MONEY, new MoneyCellEditor(false));    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_CAIG_MONEY, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_BUDGET_BI_MONEY, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_BUDGET_BI_MONEY, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_BUDGET_OTHER_MONEY, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_BUDGET_OTHER_MONEY, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_ITEM_VAL, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_ITEM_VAL, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_HT_BI_MONEY, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_HT_BI_MONEY, new NumberCellRenderer());    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_HT_OTHER_MONEY, new MoneyCellEditor());    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_HT_OTHER_MONEY, new NumberCellRenderer());    //    SwingUtil.setTableCellEditor(table, ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, new MoneyCellEditor());    //    //    SwingUtil.setTableCellRenderer(table, ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, new NumberCellRenderer());  }  public static List<ColumnBeanPropertyPair> getBiInfo2() {    return biInfo2;  }  public static List<ColumnBeanPropertyPair> getBiInfo() {    return biInfo;  }  public static void setBiInfo(List<ColumnBeanPropertyPair> biInfo) {    ZcXmcgHtToTableModelConverter.biInfo = biInfo;  }  public static DefaultTableModel convertToTableModelSup(List entrustList) {    MyTableModel tableModel = null;    Vector names = new Vector();    Vector values = new Vector();    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_NAME));    names.add("中标供应商");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_NAME));    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_MAKE_CODE));    names.add("追加合同名称");    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_CODE));    names.add("追加采购计划金额");    names.add("主合同代码");    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_HT_STATUS));    //    //    names.add(LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_CO_CODE_ND));    if (entrustList != null && entrustList.size() > 0) {      for (int i = 0; i < entrustList.size(); i++) {        Vector rowData = new Vector();        ZcXmcgHt zcXmcgHt = (ZcXmcgHt) entrustList.get(i);        rowData.add(CompanyDataCache.getName(zcXmcgHt.getCoCode()));        rowData.add(zcXmcgHt.getZcSuName());        rowData.add(zcXmcgHt.getZcPProMake().getZcMakeName());        rowData.add(zcXmcgHt.getZcPProMake().getZcMakeCode());        rowData.add(zcXmcgHt.getZcHtName());        rowData.add(zcXmcgHt.getZcHtCode());        rowData.add(zcXmcgHt.getZcHtNum());        rowData.add(zcXmcgHt.getZcParhtCode());        //        rowData.add(AsValDataCache.getName("ZC_VS_HT_STATUS", zcXmcgHt.getZcHtStatus()));        //        //        rowData.add(zcXmcgHt.getNd());        values.add(rowData);      }    }    tableModel = new MyTableModel(values, names) {      public Class getColumnClass(int column) {        if ((column >= 0) && (column < getColumnCount()) && this.getRowCount() > 0) {          for (int row = 0; row < this.getRowCount(); row++) {            if (getValueAt(row, column) != null) {              return getValueAt(row, column).getClass();            }          }        }        return Object.class;      }      public boolean isCellEditable(int row, int colum) {        return false;      }    };    tableModel.setList(entrustList);    return tableModel;  }  public static TableModel convertSubBiTableDataForSubHt(List<ZcXmcgHtBi> biList, final Map wfCanEditFieldMap) {    if(ZcUtil.useBudget()){      return convertBiTableForSubHtWihtBudget(biList, wfCanEditFieldMap);    }else{      return convertBiTableForSubHtWihtoutBudget(biList, wfCanEditFieldMap);    }  }  public static TableModel convertBiTableForSubHtWihtBudget(List<ZcXmcgHtBi> biList, final Map wfCanEditFieldMap) {    BeanTableModel<ZcXmcgHtBi> tm = new BeanTableModel<ZcXmcgHtBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if (ZcElementConstants.FIELD_TRANS_ORIGIN_NAME.equals(columnId)           || ZcElementConstants.FIELD_TRANS_SENDDOC_NAME.equals(columnId)           || ZcElementConstants.FIELD_TRANS_FUND_NAME.equals(columnId)          || ZcElementConstants.FIELD_TRANS_ORIGIN_NAME.equals(columnId)          || ZcElementConstants.FIELD_TRANS_PROJ_NAME.equals(columnId)           || ZcElementConstants.FIELD_TRANS_B_ACC_NAME.equals(columnId)           || ZcElementConstants.FIELD_TRANS_OUTLAY_NAME.equals(columnId)          || ZcElementConstants.FIELD_TRANS_BT_NAME.equals(columnId)          || ZcElementConstants.FIELD_TRANS_GB_NAME.equals(columnId)           || ZcElementConstants.FIELD_TRANS_ZC_BI_SUM.equals(columnId)           || ZcElementConstants.FIELD_TRANS_ZC_BI_DO_SUM.equals(columnId)) {                     return false;                 }        if (ZcUtil.useBudget() && "ZC_BI_NO".equals(columnId) && ZcUtil.isYsdw()) {          return true;        }        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcXmcgHtBi bean = dataBeanList.get(rowIndex);        if ("ZC_FUND_FILE".equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcFundFile(null);            this.getBean(rowIndex).setZcFundFileBlobid(null);          } else {            this.getBean(rowIndex).setZcFundFile(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcFundFileBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(bean);        } else if ("ZC_BI_NO".equals(this.getColumnIdentifier(columnIndex))) {          super.setValueAt(aValue == null ? null : aValue + "", rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (ZcXmcgHtBi o : biList) {      o.setTempId(Guid.genID());    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfoForSubHtWihtBugdet);    return tm;  }  public static List<ColumnBeanPropertyPair> biInfoForSubHtWihtBugdet = new ArrayList<ColumnBeanPropertyPair>();  static {    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcBiNo", "指标编号"));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME, "originName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_NAME, "fundName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_FUND_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "projectName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "bAccName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "outlayName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BT_NAME, "btName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_BT_NAME)));//是否监督使用    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_GB_NAME, "gbName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_GB_NAME)));//是否政府采购    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_SUM, "zcBiSum", "指标总金额"));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_DO_SUM, "zcBiDoSum", "指标可用金额"));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, "zcBiBcsySum", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM)));    biInfoForSubHtWihtBugdet.add(new ColumnBeanPropertyPair("ZC_FUND_REMARK", "zcFundRemark", LangTransMeta.translate("ZC_FUND_REMARK")));  }  public static TableModel convertBiTableForSubHtWihtoutBudget(List<ZcXmcgHtBi> biList, final Map wfCanEditFieldMap) {    BeanTableModel<ZcXmcgHtBi> tm = new BeanTableModel<ZcXmcgHtBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        return super.isCellEditable(row, column);      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcXmcgHtBi bean = dataBeanList.get(rowIndex);        if ("ZC_FUND_FILE".equals(this.getColumnIdentifier(columnIndex))) {          if (aValue == null) {            this.getBean(rowIndex).setZcFundFile(null);            this.getBean(rowIndex).setZcFundFileBlobid(null);          } else {            this.getBean(rowIndex).setZcFundFile(((AsFile) aValue).getFileName());            this.getBean(rowIndex).setZcFundFileBlobid(((AsFile) aValue).getFileId());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(bean);        } else if ("ZC_BI_NO".equals(this.getColumnIdentifier(columnIndex))) {          super.setValueAt(aValue == null ? null : aValue + "", rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (ZcXmcgHtBi o : biList) {      o.setTempId(Guid.genID());    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfoForSubHtWihtoutBugdet);    return tm;  }  public static List<ColumnBeanPropertyPair> biInfoForSubHtWihtoutBugdet = new ArrayList<ColumnBeanPropertyPair>(); static {    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_FUND_CODE, "fundName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_FUND_CODE)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_NO, "zcBiNo", "指标编号"));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE, "originName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_ORIGIN_CODE)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME, "senddocName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_SENDDOC_NAME)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_PROJ_NAME, "projectName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_PROJ_NAME)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_B_ACC_NAME, "bAccName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_B_ACC_NAME)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME, "outlayName", LangTransMeta      .translate(ZcElementConstants.FIELD_TRANS_OUTLAY_NAME)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_SUM, "zcBiSum", "指标总金额"));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM, "zcBiBcsySum", LangTransMeta.translate(ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM)));    biInfoForSubHtWihtoutBugdet.add(new ColumnBeanPropertyPair("ZC_FUND_REMARK", "zcFundRemark", LangTransMeta.translate("ZC_FUND_REMARK")));}  public static List<ColumnBeanPropertyPair> getZxItemInfo() {    return zxItemInfo;  }  private static List<ColumnBeanPropertyPair> zxItemInfo = new ArrayList<ColumnBeanPropertyPair>();  static {    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_SP_NAME, "zcSpName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_SP_NAME)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE, "zcCatalogueCode", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_BRA_NAME, "zcBraName", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_BRA_NAME)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_SPEC, "zcMerSpec", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_SPEC)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL, "zcCaigShl", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_JLDW, "zcCaigJldw", "计量单位"));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE, "zcCaigPrice", "单价"));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_CAIG_MONEY, "zcCaigMoney", "金额"));    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ITEM_SUM, "zcItemSum", "预算总计"));    //    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BUDGET_BI_MONEY, "budgetBiMoney", "财政性资金"));    //    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_BUDGET_OTHER_MONEY, "budgetOtherMoney", "其他资金"));    //    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_ITEM_VAL, "zcItemVal", "实际总计"));    //    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_BI_MONEY, "zcHtBiMoney", "财政性资金"));    //    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_OTHER_MONEY, "zcHtOtherMoney", "其他资金"));    //    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY, "zcHtGkMoney", LangTransMeta    //    //    .translate(ZcElementConstants.FIELD_TRANS_ZC_HT_GK_MONEY)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS, "zcIsJnjs", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_IS_JNJS)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX, "zcMerIsZzcx", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_ZZCX)));    zxItemInfo.add(new ColumnBeanPropertyPair(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB, "zcMerIsLshb", LangTransMeta    .translate(ZcElementConstants.FIELD_TRANS_ZC_MER_IS_LSHB)));  }  public static TableModel convertSubZxItemTableData(List itemList) {    BeanTableModel<ZcTBchtItem> tm = new BeanTableModel<ZcTBchtItem>() {      private static final long serialVersionUID = 6888363838628062064L;      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);        if ("ZC_ITEM_VAL".equals(columnId) || "ZC_ITEM_SUM".equals(columnId)) {          return false;        }        return super.isCellEditable(row, column);      }      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        ZcTBchtItem bean = dataBeanList.get(rowIndex);        String currentColName = this.getColumnIdentifier(columnIndex);        if (aValue instanceof BaseElement) {          BeanUtil.set(columnBeanPropertyPairList.get(columnIndex).getBeanPropertyName(), ((BaseElement) aValue).getName(), bean);          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CATALOGUE_CODE.equals(this.getColumnIdentifier(columnIndex))) {          Object obj = getValueAt(rowIndex, columnIndex);          if (aValue == null) {            this.getBean(rowIndex).setZcCatalogueCode(null);            this.getBean(rowIndex).setZcCatalogueName(null);          } else {            this.getBean(rowIndex).setZcCatalogueCode(((TreeNodeValueObject) aValue).getCode());            this.getBean(rowIndex).setZcCatalogueName(((TreeNodeValueObject) aValue).getName());          }          fireTableCellUpdated(rowIndex, columnIndex);          putEditedData(dataBeanList.get(rowIndex));        } else if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE.equals(currentColName)        || ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_PRICE.equals(currentColName)) {            bean.setZcCaigPrice(new BigDecimal(aValue.toString()));          }          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {            bean.setZcCaigShl(new BigDecimal(aValue.toString()));          }          if (ZcElementConstants.FIELD_TRANS_ZC_CAIG_SHL.equals(currentColName)) {          }          BigDecimal sl = bean.getZcCaigShl() == null ? BigDecimal.ZERO : bean.getZcCaigShl();          BigDecimal price = bean.getZcCaigPrice() == null ? BigDecimal.ZERO : bean.getZcCaigPrice();          bean.setZcCaigMoney(sl.multiply(price));          putEditedData(bean);          fireTableCellUpdated(rowIndex, columnIndex);          //super.setValueAt(aValue, rowIndex, columnIndex);        } else {          super.setValueAt(aValue, rowIndex, columnIndex);        }      }    };    tm.setOidFieldName("tempId");    for (Object o : itemList) {      ((ZcTBchtItem) o).setTempId(Guid.genID());    }    tm.setDataBean(itemList, zxItemInfo);    return tm;  }  /**   * 采购计划资金变更里，涉及到合同资金变更时使用，显示合同变更后资金   * @param biList   * @param canEdit   * @return   */  public static TableModel convertSubBiTableData2(List<ZcXmcgHtBi> biList) {    BeanTableModel<ZcXmcgHtBi> tm = new BeanTableModel<ZcXmcgHtBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {        String columnId = this.getColumnIdentifier(column);                  if (ZcElementConstants.FIELD_TRANS_ZC_BI_BCSY_SUM.equals(columnId)) {            return true;          }                 return false;      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");//System.out.println("size="+biList.size());    for (ZcXmcgHtBi o : biList) {      if(o.getTempId()==null){        o.setTempId(Guid.genID());      }    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfo2);    return tm;  }  /**   * 采购计划资金变更里，涉及到合同资金变更时使用,显示合同原有资金   * @param biList   * @return   */  public static TableModel convertSubBiTableData3(List<ZcXmcgHtBi> biList) {    BeanTableModel<ZcXmcgHtBi> tm = new BeanTableModel<ZcXmcgHtBi>() {      private static final long serialVersionUID = 6888363838628062064L;      @Override      public boolean isCellEditable(int row, int column) {         return false;      }      @Override      public void setValueAt(Object aValue, int rowIndex, int columnIndex) {        super.setValueAt(aValue, rowIndex, columnIndex);      }    };    tm.setOidFieldName("tempId");//System.out.println("size="+biList.size());    for (ZcXmcgHtBi o : biList) {      if(o.getTempId()==null){        o.setTempId(Guid.genID());      }    }    //    tm.setOidFieldName("detailCode");    tm.setDataBean(biList, biInfo2);    return tm;  }}